{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.19.4",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@cucumber/cucumber!",
  "docComment": "/**\n * Cucumber for JavaScript\n *\n * @remarks\n *\n * These docs cover the API used for running Cucumber programmatically. The entry point is `@cucumber/cucumber/api`.\n *\n * @packageDocumentation\n */\n",
  "name": "@cucumber/cucumber",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@cucumber/cucumber!",
      "name": "",
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!ILoadConfigurationOptions:interface",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ILoadConfigurationOptions "
            }
          ],
          "releaseTag": "Beta",
          "name": "ILoadConfigurationOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ILoadConfigurationOptions#file:member",
              "docComment": "/**\n * Path to load configuration file from (defaults to `cucumber.(js|cjs|mjs|json)` if omitted).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "file?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "file",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ILoadConfigurationOptions#profiles:member",
              "docComment": "/**\n * Zero or more profile names from which to source configuration (if omitted or empty, the `default` profile will be used).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "profiles?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "profiles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ILoadConfigurationOptions#provided:member",
              "docComment": "/**\n * Ad-hoc configuration options to be applied over the top of whatever is loaded from the configuration file/profiles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "provided?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@cucumber/cucumber!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "provided",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!ILoadSupportOptions:interface",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ILoadSupportOptions "
            }
          ],
          "releaseTag": "Beta",
          "name": "ILoadSupportOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ILoadSupportOptions#sources:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sources: "
                },
                {
                  "kind": "Reference",
                  "text": "ISourcesCoordinates",
                  "canonicalReference": "@cucumber/cucumber!ISourcesCoordinates:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "sources",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ILoadSupportOptions#support:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "support: "
                },
                {
                  "kind": "Reference",
                  "text": "ISupportCodeCoordinates",
                  "canonicalReference": "@cucumber/cucumber!ISupportCodeCoordinates:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "support",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!IResolvedConfiguration:interface",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IResolvedConfiguration "
            }
          ],
          "releaseTag": "Beta",
          "name": "IResolvedConfiguration",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IResolvedConfiguration#original:member",
              "docComment": "/**\n * The final flat configuration object resolved from the configuration file/profiles plus any extra provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "original: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@cucumber/cucumber!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "original",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IResolvedConfiguration#runnable:member",
              "docComment": "/**\n * The format that can be passed into `runCucumber`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runnable: "
                },
                {
                  "kind": "Reference",
                  "text": "IRunnableConfiguration",
                  "canonicalReference": "@cucumber/cucumber!IRunnableConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "runnable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!IRunEnvironment:interface",
          "docComment": "/**\n * Contextual data about the project environment.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRunEnvironment "
            }
          ],
          "releaseTag": "Beta",
          "name": "IRunEnvironment",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunEnvironment#cwd:member",
              "docComment": "/**\n * Working directory for the project (defaults to `process.cwd()` if omitted).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cwd?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "cwd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunEnvironment#env:member",
              "docComment": "/**\n * Environment variables (defaults to `process.env` if omitted).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "env?: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeJS.ProcessEnv",
                  "canonicalReference": "!__global.NodeJS.ProcessEnv:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "env",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunEnvironment#stderr:member",
              "docComment": "/**\n * Writable stream where the test run's warning/error output is written (defaults to `process.stderr` if omitted).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stderr?: "
                },
                {
                  "kind": "Reference",
                  "text": "IFormatterStream",
                  "canonicalReference": "@cucumber/cucumber!IFormatterStream:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "stderr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunEnvironment#stdout:member",
              "docComment": "/**\n * Writable stream where the test run's main output is written (defaults to `process.stdout` if omitted).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stdout?: "
                },
                {
                  "kind": "Reference",
                  "text": "IFormatterStream",
                  "canonicalReference": "@cucumber/cucumber!IFormatterStream:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "stdout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!IRunnableConfiguration:interface",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRunnableConfiguration "
            }
          ],
          "releaseTag": "Beta",
          "name": "IRunnableConfiguration",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunnableConfiguration#formats:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formats: "
                },
                {
                  "kind": "Reference",
                  "text": "IRunOptionsFormats",
                  "canonicalReference": "@cucumber/cucumber!IRunOptionsFormats:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "formats",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunnableConfiguration#runtime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IRunOptionsRuntime",
                  "canonicalReference": "@cucumber/cucumber!IRunOptionsRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "runtime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunnableConfiguration#sources:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sources: "
                },
                {
                  "kind": "Reference",
                  "text": "ISourcesCoordinates",
                  "canonicalReference": "@cucumber/cucumber!ISourcesCoordinates:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "sources",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunnableConfiguration#support:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "support: "
                },
                {
                  "kind": "Reference",
                  "text": "ISupportCodeCoordinates",
                  "canonicalReference": "@cucumber/cucumber!ISupportCodeCoordinates:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "support",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!IRunOptions:interface",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRunOptions "
            }
          ],
          "releaseTag": "Beta",
          "name": "IRunOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunOptions#formats:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formats: "
                },
                {
                  "kind": "Reference",
                  "text": "IRunOptionsFormats",
                  "canonicalReference": "@cucumber/cucumber!IRunOptionsFormats:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "formats",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunOptions#runtime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IRunOptionsRuntime",
                  "canonicalReference": "@cucumber/cucumber!IRunOptionsRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "runtime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunOptions#sources:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sources: "
                },
                {
                  "kind": "Reference",
                  "text": "ISourcesCoordinates",
                  "canonicalReference": "@cucumber/cucumber!ISourcesCoordinates:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "sources",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunOptions#support:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "support: "
                },
                {
                  "kind": "Reference",
                  "text": "ISupportCodeCoordinatesOrLibrary",
                  "canonicalReference": "@cucumber/cucumber!ISupportCodeCoordinatesOrLibrary:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "support",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!IRunOptionsFormats:interface",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRunOptionsFormats "
            }
          ],
          "releaseTag": "Beta",
          "name": "IRunOptionsFormats",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunOptionsFormats#files:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "files: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "files",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunOptionsFormats#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options: "
                },
                {
                  "kind": "Reference",
                  "text": "FormatOptions",
                  "canonicalReference": "@cucumber/cucumber!FormatOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunOptionsFormats#publish:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "publish: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        url?: string;\n        token?: string;\n    } | false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "publish",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunOptionsFormats#stdout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stdout: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "stdout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!IRunOptionsRuntime:interface",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRunOptionsRuntime extends "
            },
            {
              "kind": "Reference",
              "text": "IRuntimeOptions",
              "canonicalReference": "@cucumber/cucumber!IRuntimeOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Beta",
          "name": "IRunOptionsRuntime",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunOptionsRuntime#parallel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parallel: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "parallel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!IRunResult:interface",
          "docComment": "/**\n * Result of a Cucumber test run.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRunResult "
            }
          ],
          "releaseTag": "Beta",
          "name": "IRunResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunResult#success:member",
              "docComment": "/**\n * Whether the test run was overall successful i.e. no failed scenarios. The exact meaning can vary based on the `strict` configuration option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "success: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "success",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!IRunResult#support:member",
              "docComment": "/**\n * The support code library that was used in the test run; can be reused in subsequent `runCucumber` calls.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "support: "
                },
                {
                  "kind": "Reference",
                  "text": "ISupportCodeLibrary",
                  "canonicalReference": "@cucumber/cucumber!ISupportCodeLibrary:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "support",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!ISourcesCoordinates:interface",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISourcesCoordinates "
            }
          ],
          "releaseTag": "Beta",
          "name": "ISourcesCoordinates",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ISourcesCoordinates#defaultDialect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultDialect: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "defaultDialect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ISourcesCoordinates#names:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "names: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "names",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ISourcesCoordinates#order:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "order: "
                },
                {
                  "kind": "Reference",
                  "text": "PickleOrder",
                  "canonicalReference": "@cucumber/cucumber!PickleOrder:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "order",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ISourcesCoordinates#paths:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "paths: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "paths",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ISourcesCoordinates#tagExpression:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tagExpression: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "tagExpression",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@cucumber/cucumber!ISupportCodeCoordinates:interface",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISupportCodeCoordinates "
            }
          ],
          "releaseTag": "Beta",
          "name": "ISupportCodeCoordinates",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ISupportCodeCoordinates#importPaths:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "importPaths: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "importPaths",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ISupportCodeCoordinates#requireModules:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requireModules: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "requireModules",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@cucumber/cucumber!ISupportCodeCoordinates#requirePaths:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requirePaths: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "requirePaths",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cucumber/cucumber!ISupportCodeCoordinatesOrLibrary:type",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ISupportCodeCoordinatesOrLibrary = "
            },
            {
              "kind": "Reference",
              "text": "ISupportCodeCoordinates",
              "canonicalReference": "@cucumber/cucumber!ISupportCodeCoordinates:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ISupportCodeLibrary",
              "canonicalReference": "@cucumber/cucumber!ISupportCodeLibrary:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Beta",
          "name": "ISupportCodeCoordinatesOrLibrary",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@cucumber/cucumber!loadConfiguration:function(1)",
          "docComment": "/**\n * Load user-authored configuration to be used in a test run.\n *\n * @param options - Coordinates required to find configuration.\n *\n * @param environment - Project environment.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function loadConfiguration(options: "
            },
            {
              "kind": "Reference",
              "text": "ILoadConfigurationOptions",
              "canonicalReference": "@cucumber/cucumber!ILoadConfigurationOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", environment: "
            },
            {
              "kind": "Reference",
              "text": "IRunEnvironment",
              "canonicalReference": "@cucumber/cucumber!IRunEnvironment:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IResolvedConfiguration",
              "canonicalReference": "@cucumber/cucumber!IResolvedConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "environment",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "loadConfiguration"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cucumber/cucumber!loadSupport:function(1)",
          "docComment": "/**\n * Load support code for use in test runs.\n *\n * @param options - Subset of `IRunnableConfiguration` required to find the support code.\n *\n * @param environment - Project environment.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function loadSupport(options: "
            },
            {
              "kind": "Reference",
              "text": "ILoadSupportOptions",
              "canonicalReference": "@cucumber/cucumber!ILoadSupportOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", environment: "
            },
            {
              "kind": "Reference",
              "text": "IRunEnvironment",
              "canonicalReference": "@cucumber/cucumber!IRunEnvironment:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISupportCodeLibrary",
              "canonicalReference": "@cucumber/cucumber!ISupportCodeLibrary:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "environment",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "loadSupport"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cucumber/cucumber!runCucumber:function(1)",
          "docComment": "/**\n * Execute a Cucumber test run.\n *\n * @param configuration - Configuration loaded from `loadConfiguration`.\n *\n * @param environment - Project environment.\n *\n * @param onMessage - Callback fired each time Cucumber emits a message.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function runCucumber(configuration: "
            },
            {
              "kind": "Reference",
              "text": "IRunOptions",
              "canonicalReference": "@cucumber/cucumber!IRunOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", environment: "
            },
            {
              "kind": "Reference",
              "text": "IRunEnvironment",
              "canonicalReference": "@cucumber/cucumber!IRunEnvironment:interface"
            },
            {
              "kind": "Content",
              "text": ", onMessage?: "
            },
            {
              "kind": "Content",
              "text": "(message: "
            },
            {
              "kind": "Reference",
              "text": "Envelope",
              "canonicalReference": "@cucumber/messages!Envelope:class"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IRunResult",
              "canonicalReference": "@cucumber/cucumber!IRunResult:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 13
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configuration",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "environment",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "onMessage",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              }
            }
          ],
          "name": "runCucumber"
        }
      ]
    }
  ]
}
